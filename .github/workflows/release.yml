name: PlatformIO Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Trigger on tags like v1.0, v2.5.1
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for git describe
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install PlatformIO
      run: pip install -U platformio
    - name: Set UI version
      if: startsWith(github.ref, 'refs/tags/')
      run: python set_ui_version.py ${{ github.ref_name }}
    - name: Build PlatformIO Project
      env:
        PLATFORMIO_BUILD_FLAGS: "-DFIRMWARE_VERSION='\"${{ github.ref_name }}\"'"
      run: pio run -e esp32dev
    - name: Build Filesystem Image
      run: pio run -t buildfs
    - name: Upload firmware binary
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: .pio/build/esp32dev/firmware.bin
    - name: Upload filesystem image
      uses: actions/upload-artifact@v4
      with:
        name: littlefs
        path: .pio/build/esp32dev/littlefs.bin

  release:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download firmware artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware
      - name: Download filesystem artifact
        uses: actions/download-artifact@v4
        with:
          name: littlefs
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Firmware Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./firmware.bin
          asset_name: firmware-${{ github.ref_name }}.bin
          asset_content_type: application/octet-stream
      - name: Upload Filesystem Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./littlefs.bin
          asset_name: littlefs-${{ github.ref_name }}.bin
          asset_content_type: application/octet-stream
